-- Welcome to Project Valix, If you're seeing this apply for developer in Our Discord ("https://discord.gg/t7sXgFNmgq")
-- This Script Hub was Created by ALVORIKK and is Currently being worked on By the Developers in the discord above.

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
    Name = "Project Valix",
    LoadingTitle = "Project Valix Development",
    LoadingSubtitle = "by Developers",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Valix"
    },
    Discord = {
       Enabled = false,
       Invite = "t7sXgFNmgq", -- The Discord invite code, do not include discord.gg/
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Project Valix",
       Subtitle = "Key System",
       Note = "Join the discord (discord.gg/t7sXgFNmgq)",
       FileName = "SiriusKey",
       SaveKey = true,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "ValixIsHere"
    }
})


-- Menu Stuff
local Menu = Window:CreateTab("Home") -- Title, Image
local MenuSection = Menu:CreateSection("Home Stuff")

-- Values
getgenv().AdminOption = nil

-- Functions
function AdminStuff()
    if getgenv().AdminOption == "Infinite Yield" then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    elseif getgenv().AdminOption == "Home-Brew" then
        loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Syntaxx64/HomebrewAdmin/master/Main"))()
    elseif getgenv().AdminOption == "Fate's Admin" then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))()
    end


end

-- Menu Dropdowns + Buttons

local AdminDropdown = Menu:CreateDropdown({
    Name = "Admin Selection",
    Options = {"Infinite Yield","Home-Brew","Fate's Admin"},
    CurrentOption = "Option 1",
    Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Option)
        getgenv().AdminOption = Option
        AdminStuff()
    end,
})

-- Menu Sliders

local speedslider = Menu:CreateSlider({
    Name = "Speed",
    Range = {16, 600},
    Increment = 10,
    Suffix = "Speed Power",
    CurrentValue = 16,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
    end,
})


local jumphack = Menu:CreateSlider({
    Name = "Jump Power",
    Range = {50, 600},
    Increment = 10,
    Suffix = "Jump Power",
    CurrentValue = 50,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
    end,
})

-- Script Creation Stuff

local SimpleSpy = Menu:CreateButton({
    Name = "Simple Spy",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
    end,
})

local DDex = Menu:CreateButton({
    Name = "Dark Dex",
    Callback = function()
        loadstring(game:HttpGet("https://gist.githubusercontent.com/DinosaurXxX/b757fe011e7e600c0873f967fe427dc2/raw/ee5324771f017073fc30e640323ac2a9b3bfc550/dark%2520dex%2520v4"))()
    end,
})

-- Game Looks
local RTX = Menu:CreateButton({
    Name = "RTX",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/RTX%20Gui%20Hub%20Obfuscator'))()
    end,
})

-- Script Stuff
local DestroyUI = Menu:CreateButton({
    Name = "Destroy Project X",
    Callback = function()
        Rayfield:Destroy()    
    end,
})

-- Information
local Info = Window:CreateTab("Information") -- Title, Image
local InfoSection = Info:CreateSection("Information Stuff")


local InfoLabel = Info:CreateLabel("Welcome to Project Valix, Project Valix is an Upcoming Script Hub")
local InfoLabel = Info:CreateLabel("Project Valix Was Originaly Created by Alvorikk, and Is now Being Developed by 3 People")
local InfoLabel = Info:CreateLabel("Project Valix 1.3")

local sInfoSection = Info:CreateSection("Join Our Discord")

local JoinDisco = Info:CreateButton({
    Name = "Copy The Discord Community's Discord. ",
    Callback = function()
        setclipboard("https://discord.gg/t7sXgFNmgq")
    end,
})


local InfoSection = Info:CreateSection("Manual Load")


local JoinDisco = Info:CreateButton({
    Name = "Load Shindo Life Stuff",
    Callback = function()
        
        -- Shindo Life Loading Notif
        Rayfield:Notify({
            Title = "Project Valix",
            Content = "Succesfully Loaded Shindo Life Tab",
            Duration = 6.5,
            Image = 0,
            Actions = { -- Notification Buttons
               Ignore = {
                  Name = "Okay!",
                  Callback = function()
                  print("The user tapped Okay!")
               end
            },
         },
        })

        wait(1)


        -- Shindo Shit

        local Shindo = Window:CreateTab("Shindo Life") -- Title, Image
        local ShindoSection = Shindo:CreateSection("Shindo Life Menu Stuff")

        local DonHubs = Shindo:CreateButton({
            Name = "Don Hub",
            Callback = function()
               
                Rayfield:Notify({
                    Title = "Project Valix",
                    Content = "Succesfully Started Loading, Don Hub",
                    Duration = 6.5,
                    Image = 0,
                    Actions = { -- Notification Buttons
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                        print("Loaded")
                    end
                    },
                },
                })

                wait(1)

                repeat pcall(function() source = game:HttpGet('https://gist.github.com/AzureArts/99f5b5cfd49def461216e4d4689757ce/raw',true) end) if source == nil then wait(0.5) warn('HTTP Error, retrying') end until source ~= nil loadstring(source)()

            end,
        })

        local ShindoSection = Shindo:CreateSection("Shindo Life Stuff")


        local AScriptoriknow = Shindo:CreateButton({
            Name = "Night-Side",
            Callback = function()
                
                Rayfield:Notify({
                    Title = "Project Valix",
                    Content = "Succesfully Started Loading, Night Side",
                    Duration = 6.5,
                    Image = 0,
                    Actions = { -- Notification Buttons
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                        print("Loaded")
                    end
                    },
                },
                })
                
                wait (1)
                
                loadstring(game:HttpGet("https://raw.githubusercontent.com/TrustsenseDev/Utilities/main/Premier.lua", true))()

            end,
        })

        local Stuff1 = Shindo:CreateButton({
            Name = "Nuke Hub",
            Callback = function()
                Rayfield:Notify({
                    Title = "Project Valix",
                    Content = "Succesfully Started Loading, Nuke Hub",
                    Duration = 6.5,
                    Image = 0,
                    Actions = { -- Notification Buttons
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                        print("Loaded")
                    end
                    },
                },
                })
                
                wait (1)

                loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()


            end,
        })



    end,


})





-- Note To Alvorikk Fix Shindo Life


-- Lucky Blocks
if game.PlaceId == 662417684 then
    local LBlocks = Window:CreateTab("Lucky Blocks") -- Title, Image
    local LBlocksSection = LBlocks:CreateSection("Lucky Blocks Stuff")

    -- Lucky Block Values
    _G.OpenGBlocks = true
    _G.OpenRainBlocks = true
    _G.OpenDiamBlocks = true
    _G.OpenSuperBlocks = true
    _G.OpenNormieBlocks = true

    -- Lucky Block Functions
    function opengalaxy()
        while _G.OpenGBlocks == true do
            game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
            wait(.001)
        end
    end

    function openrainbow()
        while _G.OpenRainBlocks == true do
            game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
            wait(.001)
        end
    end

    function opendiamond()
        while _G.OpenDiamBlocks == true do
            game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
            wait(.001)
        end
    end

    function opensuper()
        while _G.OpenSuperBlocks == true do
            game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
            wait(.001)
        end
    end

    function opennormie()
        while _G.OpenNormieBlocks == true do
            game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
            wait(.001)
        end
    end

    -- Lucky Block Toggles
    local RBlockoggle = LBlocks:CreateToggle({
        Name = "Get Galaxy Items",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.OpenGBlocks = Value
            opengalaxy()
        end,
    })

    local GBlockToggle = LBlocks:CreateToggle({
        Name = "Get Rainbow Items",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.OpenRainBlocks = Value
            openrainbow()
        end,
    })

    local DBlockToggle = LBlocks:CreateToggle({
        Name = "Get Diamond Items",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.OpenDiamBlocks = Value
            opendiamond()
        end,
    })

    local SBlockToggle = LBlocks:CreateToggle({
        Name = "Get Super Items",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.OpenSuperBlocks = Value
            opensuper()
        end,
    })

    local NorBlockToggle = LBlocks:CreateToggle({
        Name = "Get Lucky Items",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.OpenNormieBlocks = Value
            opennormie()
        end,
    })

elseif game.PlaceId == 6875469709 then
    local Strongest = Window:CreateTab("Strongest Punch") -- Title, Image
    local StrongestSection = Strongest:CreateSection("Strongest Punch Section")

    local AutoPunch = Strongest:CreateButton({
        Name = "Auto-Punch",
        Callback = function()
            while wait() do 
            local args = {
                [1] = {
                    [1] = "Activate_Punch"
                }
            }
            
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            end
        
        end,
     })


     -- Break In- Ingame
elseif game.PlaceId == 4620170611 then
    local BreakeIn = Window:CreateTab("Break In") -- Title, Image
    local BreakInSection = BreakeIn:CreateSection("Break In Section")

    local Apple = BreakeIn:CreateButton({
        Name = "Give Apple",
        Callback = function()
            local args = {
                [1] = "Apple"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GivLePizza = BreakeIn:CreateButton({
        Name = "Give Pizza",
        Callback = function()
            local args = {
                [1] = "Pizza1"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GiveCookee = BreakeIn:CreateButton({
        Name = "Give Cookie",
        Callback = function()
               local args = {
                    [1] = "Cookie"
                }
            
                game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
           end,
    })

    local BMoney = BreakeIn:CreateButton({
        Name = "Give Money",
        Callback = function()
            local args = {
                [1] = workspace.Money3
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.FoundMoney:FireServer(unpack(args))
            
        end,
    })


    local Plankton = BreakeIn:CreateButton({
        Name = "Give Plank",
        Callback = function()
            local args = {
                [1] = "Plank"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
         end,
    })

elseif game.PlaceId == 3851622790 then
    local BreakeIn = Window:CreateTab("Break In") -- Title, Image
    local BreakInSection = BreakeIn:CreateSection("Break In Section")

    local Apple = BreakeIn:CreateButton({
        Name = "Give Apple",
        Callback = function()
            local args = {
                [1] = "Apple"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GivLePizza = BreakeIn:CreateButton({
        Name = "Give Pizza",
        Callback = function()
            local args = {
                [1] = "Pizza1"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GiveCookee = BreakeIn:CreateButton({
        Name = "Give Cookie",
        Callback = function()
               local args = {
                    [1] = "Cookie"
                }
            
                game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
           end,
    })

    local BMoney = BreakeIn:CreateButton({
        Name = "Give Money",
        Callback = function()
            local args = {
                [1] = workspace.Money3
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.FoundMoney:FireServer(unpack(args))
            
        end,
    })


   local Plankton = BreakeIn:CreateButton({
        Name = "Give Plank",
        Callback = function()
            local args = {
                [1] = "Plank"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
         end,
    }) 

    -- Sword Fighter Simulator
elseif game.PlaceId == 11040063484 then
    local SwordFighter = Window:CreateTab("Sword Fighter") -- Title, Image
    local SwordFighterSection = SwordFighter:CreateSection("Sword Fighter Section")

    --Values
    _G.AutoClick = true
    _G.AutoEquiptItem = true
    _G.AutoEquiptPet = true

    -- Functions
    function autotap()
        while _G.AutoClick == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
            wait(.4)
        end
    end

    function autoequip()
        while _G.AutoEquipt == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.WeaponInvService.RF.EquipBest:InvokeServer()
            wait(1)
        end
    end

    function autoequiptpet()
        while _G.AutoEquiptPet == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetInvService.RF.EquipBest:InvokeServer()
            wait(2)
        end
    end

    -- Toggles + Buttons
        local AutoClickToggle = SwordFighter:CreateToggle({
        Name = "Auto-Click",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoClick = Value
            autotap()
        end,
    })

    local AutoEquip = SwordFighter:CreateToggle({
        Name = "Auto-Equipt Best Item",
        CurrentValue = false,
        Flag = "EquiptBest", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquipt = Value
            autoequip()
        end,
    })
    
    local AutoEquipPet = SwordFighter:CreateToggle({
        Name = "Auto-Equipt Best Pet",
        CurrentValue = false,
        Flag = "AutoEquiptBPet", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquipPet = Value
            autoequiptpet()
        end,
    })

    -- Tapping Legends X
elseif game.PlaceId == 8750997647 then
    local TapLegends = Window:CreateTab("Tapping Legends") -- Title, Image
    local TapLegendsSection = TapLegends:CreateSection("Tapping Legends X Stuff")

    -- Values
    _G.AutoTap = true
    _G.AutoRebirth = true
    _G.AutoEquiptPet = true

    -- Functions
    function autotap()
        while _G.AutoTap == true do
            game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
            wait(.4)
        end
    end

    function autorebirth()
        while _G.AutoRebirth == true do
            local args = {
                [1] = 1
            }
            
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(.4)
        end
    end

    function AutoPet()
        while _G.AutoEquiptPet == true do
            game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
            wait (9)
        end
    end

    -- Toggles + Buttons
    local AutoTapToggle = TapLegends:CreateToggle({
        Name = "Auto-Tap",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoTap = Value
            autotap()
        end,
    })

    local AutoRebirthToggle = TapLegends:CreateToggle({
        Name = "Auto-Rebirth",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoRebirth = Value
            autorebirth()
        end,
    })

    local AutoBestPetToggle = TapLegends:CreateToggle({
        Name = "Auto-Equipt Best Pet",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquiptPet = Value
            AutoPet()
        end,
    })

    local TapLegendsButtons = TapLegends:CreateLabel("Open Eggs")

    local BasicEgg = TapLegends:CreateButton({
        Name = "Buy Basic Egg",
        Callback = function()
            local args = {
                [1] = "Basic Egg",
                [2] = 1
            }
            
            game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
        end,
    })

    local RareEgg = TapLegends:CreateButton({
        Name = "Buy Rare Egg",
        Callback = function()
            local args = {
                [1] = "Rare Egg",
                [2] = 3
            }
            
            game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
            
        end,
    })

    -- Muscle Legends
elseif game.PlaceId == 3623096087 then
    local MLegends = Window:CreateTab("Muscle Legends") -- Title, Image
    local MLegendsSection = MLegends:CreateSection("Muscle Legends Stuff")

    -- Values
    _G.AutoPunch = true
    _G.AutoLiftD = true

    -- Functions
    function autopunch()
        while _G.AutoPunch == true do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
            wait(.5)
        end
    end

    function autolift()
        while _G.AutoLiftD == true do            
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            wait(.4)
        end
    end

    -- Toggles + Buttons
    local AutoPunch = MLegends:CreateToggle({
        Name = "Auto-Punch",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoPunch = Value
            autopunch()
        end,
    })

    local AutoLiftDumb = MLegends:CreateToggle({
        Name = "Auto-Lift",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoLiftD = Value
            autolift()
        end,
    })

elseif game.PlaceId == 4225025295 then
    local NinSim = Window:CreateTab("Ninja Simulator") -- Title, Image
    local NinSimSection = NinSim:CreateSection("Ninja Simulator Stuff")

    -- Values
    _G.AutoBuySword = true

    -- Functions
    
    function ASword()
        while _G.AutoBuySword == true do
            local args = {
                [1] = {
                    [1] = game.ClientStorage.Client.Services.PersonalRemoteService,
                    [2] = "48f274bb-289e-41fc-bee4-5331eb5f6b52",
                    [3] = "0.5457940919443799",
                    [4] = "c71645da-3abd-46ef-9404-d0a5d095c41b"
                }
            }

            game:GetService("AnalyticsService"):FindFirstChild("210d1b0d-b5c2-47f2-b80c-3dcf3c8e2943"):InvokeServer(unpack(args))
            wait(.1)
        end
    end

    -- Toggles + Buttons + Labels
    local BuyASwordT = NinSim:CreateToggle({
        Name = "Auto-Buy New Swords",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoBuySword = Value
            ASword()
        end,
    })

elseif game.PlaceId == 10824616460 then 
    local SwordSlasher = Window:CreateTab("Sword Slasher") -- Title, Image
    local SSlasherSection = SwordSlasher:CreateSection("Sword Slasher Stuff")

    -- Values
    _G.AutoAtack1 = true
    _G.AutoDefense = true
    _G.AutoDamage = true
    _G.AutoRegen = true
    _G.AutoLuck = true


    -- Slider Shits
    
    -- Functions

    function Aluck()
        while _G.AutoLuck == true do
            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer("Luck")
            wait(.4)
        end
    end


    function autoreg()
        while _G.AutoRegen == true do
            local args = {
                [1] = "Regen",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end


    function autodef()
        while _G.AutoDefense == true do
            local args = {
                [1] = "Defence",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end

    function autodmg()
        while _G.AutoDamage == true do
            local args = {
                [1] = "Strength",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end

    function swordslash()
        while _G.AutoAtack1 == true do
            game:GetService("ReplicatedStorage").EventStorage.Attack:InvokeServer()
            wait(.01)
        end
    end

    -- Toggles + Buttons

    local AAtackingToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Swing",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoAtack1 = Value
            swordslash()
        end,
    })

    local Label = SwordSlasher:CreateLabel("TURN ON AFK MODE WHILE YOU HAVE THESE ON")
    local Label = SwordSlasher:CreateLabel("Auto Stuff")

    local DefenseToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Defense",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoDefense = Value
            autodef()
        end,
    })

    local DMGToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade DMG",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoDamage = Value
            autodmg()
        end,
    })

    local AAtackingToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Regen",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoRegen = Value
            autoreg()
        end,
    })

    local ALuckyToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Luck",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoLuck = Value
            Aluck()
        end,
    })

        -- Blox Fruits Third Sea
elseif game.PlaceId == 7449423635 then
    local BloxF = Window:CreateTab("BloxFruits") -- Title, Image
    local BloxFSection = BloxF:CreateSection("BloxFruits Section")

    local Ripper = BloxF:CreateButton({
        Name = "Ripper Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/xDestinyx/RipperHub/main/Loader.lua'))();
        end,
    })

    local HohoHub = BloxF:CreateButton({
        Name = "HoHo Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
        end,
    })

    local UltraStuff = BloxF:CreateButton({
        Name = "Blox Fruits Hub2",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UltraStuff/scripts2/main/bf", true))()
        end,
    })
    
    local Mukuro = BloxF:CreateButton({
        Name = "Mukuro",
        Callback = function()
            loadstring(game:HttpGet"https://raw.githubusercontent.com/xQuartyx/DonateMe/main/ScriptLoader")()
        end,
    })

    local Mango = BloxF:CreateButton({
        Name = "Mango",
        Callback = function()
            getgenv().WaterMark = true
            loadstring(game:HttpGet("https://gitlab.com/L1ZOT/mango-hub/-/raw/main/Mango-Bloxf-Fruits-Beta"))()
        end,
    })

    local Vellerius = BloxF:CreateButton({
        Name = "Vellerius",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Corrupt2625/pjv/main/Bloxfruit.lua"))()
        end,
    })


    --BloxFruits Second Sea
elseif game.PlaceId == 4442272183 then
    local BloxF = Window:CreateTab("BloxFruits") -- Title, Image
    local BloxFSection = BloxF:CreateSection("BloxFruits Section")

    local Ripper = BloxF:CreateButton({
        Name = "Ripper Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/xDestinyx/RipperHub/main/Loader.lua'))();
        end,
    })

    local HohoHub = BloxF:CreateButton({
        Name = "HoHo Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
        end,
    })

    local UltraStuff = BloxF:CreateButton({
        Name = "Blox Fruits Hub2",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UltraStuff/scripts2/main/bf", true))()
        end,
    })
    
    local Mukuro = BloxF:CreateButton({
        Name = "Mukuro",
        Callback = function()
            loadstring(game:HttpGet"https://raw.githubusercontent.com/xQuartyx/DonateMe/main/ScriptLoader")()
        end,
    })

    local Mango = BloxF:CreateButton({
        Name = "Mango",
        Callback = function()
            getgenv().WaterMark = true
            loadstring(game:HttpGet("https://gitlab.com/L1ZOT/mango-hub/-/raw/main/Mango-Bloxf-Fruits-Beta"))()
        end,
    })

    local Vellerius = BloxF:CreateButton({
        Name = "Vellerius",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Corrupt2625/pjv/main/Bloxfruit.lua"))()
        end,
    })

    --Blox Fruits First Sea
elseif game.PlaceId == 2753915549 then
    local BloxF = Window:CreateTab("BloxFruits") -- Title, Image
    local BloxFSection = BloxF:CreateSection("BloxFruits Section")

    local Ripper = BloxF:CreateButton({
        Name = "Ripper Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/xDestinyx/RipperHub/main/Loader.lua'))();
        end,
    })

    local HohoHub = BloxF:CreateButton({
        Name = "HoHo Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
        end,
    })

    local UltraStuff = BloxF:CreateButton({
        Name = "Blox Fruits Hub2",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UltraStuff/scripts2/main/bf", true))()
        end,
    })
    
    local Mukuro = BloxF:CreateButton({
        Name = "Mukuro",
        Callback = function()
            loadstring(game:HttpGet"https://raw.githubusercontent.com/xQuartyx/DonateMe/main/ScriptLoader")()
        end,
    })

    local Mango = BloxF:CreateButton({
        Name = "Mango",
        Callback = function()
            getgenv().WaterMark = true
            loadstring(game:HttpGet("https://gitlab.com/L1ZOT/mango-hub/-/raw/main/Mango-Bloxf-Fruits-Beta"))()
        end,
    })

    local Vellerius = BloxF:CreateButton({
        Name = "Vellerius",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Corrupt2625/pjv/main/Bloxfruit.lua"))()
        end,
    })


    --Build A Boat for Treasure
elseif game.PlaceId == 537413528 then
    local Build = Window:CreateTab("Build A Boat") -- Title, Image
    local BuildSection = Build:CreateSection("Build A Boat Section")

    local Button = Build:CreateButton({
        Name = "Auto-Build",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Alvorik/BBA-item-import/main/build_a_boat_bronide.lua"))()
        end,
    })

    local Vynixius = Build:CreateButton({
        Name = "Vynixius",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Build%20A%20Boat%20For%20Treasure/Script.lua"))()
        end,
    })

    local Autofarm = Build:CreateButton({
        Name = "Build-A-Boat Autofarm",
        Callback = function()
            local a,b,c = "juywvm","main","babft";loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/-Roblox-Projects-/%s/%s"):format(a, b, c)))() 
        end,
    })

    local VgBuild = Build:CreateButton({
        Name = "Vg Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()
        end,
    })
    

    --Ninja Legends
elseif game.PlaceId == 3956818381 then
    local Ninja = Window:CreateTab("Ninja Legends") -- Title, Image
    local NinjaSection = Ninja:CreateSection("Ninja Legends Section")
    --Values
    _G.AutoClick = true
    _G.AutoBuySword = true
    _G.AutobuyBelts = true
    _G.AutoHoop = true

    -- Functions
    function autotap()
        while _G.AutoClick == true do
            local ohString1 = "swingKatana"

            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(ohString1)
            wait(.3)
        
        end
    end

    function autohoops()
        while _G.AutoHoop == true do
            local ohString1 = "useHoop"
            local ohInstance2 = workspace.Hoops.Hoop

            game:GetService("ReplicatedStorage").rEvents.hoopEvent:FireServer(ohString1, ohInstance2)
            wait(.6)
        end
    end

    function autobuybelts()
        while _G.AutobuyBelts == true do
            local ohString1 = "buyAllBelts"
            local ohString2 = "Blazing Vortex Island"

            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(ohString1, ohString2)
            wait(2)
        end
    end

    function autobuyswords()
        while G.AutoBuySwords == true do
            local ohString1 = "buyAllSwords"
            local ohString2 = "Blazing Vortex Island"

            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(ohString1, ohString2)
            wait(1)
        end
    end    

    -- Toggles + Buttons
        local AutoClickToggle = Ninja:CreateToggle({
        Name = "Auto-Click",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoClick = Value
            autotap()
        end,
    })

    local AutoBuySword = Ninja:CreateToggle({
        Name = "Auto-Buy Sword",
        CurrentValue = false,
        Flag = "EquiptBestSword", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoBuySword = Value
            autobuyswords()
        end,
    })

    local Belts = Ninja:CreateToggle({
        Name = "Auto-Buy Belts",
        CurrentValue = false,
        Flag = "AutoBuyBestBelt", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutobuyBelts = Value
            autobuybelts()
        end,
    })

    local AutoHoopss = Ninja:CreateToggle({
        Name = "Auto-Hoop",
        CurrentValue = false,
        Flag = "autohoops", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoHoop = Value
            autohoops()
        end,
    })

    -- Buttons

    local BLabel = Ninja:CreateLabel("Buttons")
    
    local Proxamia = Ninja:CreateButton({
        Name = "Proxamia",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/TrixAde/Proxima-Hub/main/Main.lua"))()
        end,
    })

    local Exe = Ninja:CreateButton({
        Name = "NinjaLegendsExe",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/XRoLLu/UWU/main/Ninja-Legenos.exe.lua"))()
        end,
    })

    local Vynixius = Ninja:CreateButton({
        Name = "Vynixius",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Ninja%20Legends/Script.lua"))()
        end,
    })



    -- Clicker Simulator
elseif game.PlaceId == 7560156054 then
    local Clicker = Window:CreateTab("Clicker Simulator") -- Title, Image
    local ClickerSection = Clicker:CreateSection("Clicker Simulator Section")

    local Mint = Clicker:CreateButton({
        Name = "Mint Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/TrustsenseDev/UnknownHub-V1/main/Loader.lua"))()
        end,
    })

    local Extreme = Clicker:CreateButton({
        Name = "Extreme Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/ExtremeAntonis/KeySystemUI/main/KeySystemUI-Obfuscated.lua"))()
        end,
    })

    --Pet Simulator X
elseif game.PlaceId == 6284583030 then
    local PetX = Window:CreateTab("Pet Sim X") -- Title, Image
    local PetXSection = PetX:CreateSection("Pet Simulator X")

    
    local Zeerox = PetX:CreateButton({
        Name = "Zeerox",
        Callback = function()
            loadstring(game:HttpGet'https://raw.githubusercontent.com/RunDTM/ZeeroxHub/main/Loader.lua')()
        end,
    })

    local Pasta = PetX:CreateButton({
        Name = "Pasta V2",
        Callback = function()
            loadstring(game:HttpGet("https://rawscripts.net/raw/CATS-or-Pet-Simulator-X!-Pasta-v2-6841"))()
        end,
    })

    local Lazium = PetX:CreateButton({
        Name = "Lazium Hub",
        Callback = function()
            loadstring(game:HttpGet"https://raw.githubusercontent.com/CheapeeWastaken/Lazium/main/TheMain")()
        end,
    })
    
    local NukeLeHub = Tab:CreateButton({
        Name = "Nuke Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })

    --Arsenal
elseif game.PlaceId == 286090429 then
    local Arsenal = Window:CreateTab("Arsenal") -- Title, Image
    local ArsenalSection = Arsenal:CreateSection("Arsenal")

    local Stormware = Arsenal:CreateButton({
        Name = "StormWare",
        Callback = function()
        	loadstring(game:HttpGet("https://raw.githubusercontent.com/Storm99999/whitelistkeys/main/SCRIPT_VIP.lua"))()
        end,
    })

    local GodM = Arsenal:CreateButton({
        Name = "Godmode - You can only die once after activating",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/CF-Trail/random/main/ArsenalGodmode.lua"))()
        end,
    })

    local VgHubArsenal = Arsenal:CreateButton({
        Name = "VG Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()
        end,
    })

    local NukeHub = Arsenal:CreateButton({
        Name = "Nuke Le Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })

    -- Project Slayer 1st Map
elseif game.PlaceId == 6152116144 then
    local PSlayer = Window:CreateTab("Project Slayer") -- Title, Image
    local PSlayerSection = PSlayer:CreateSection("ProjectSlayer")

    local PS1 = PSlayer:CreateButton({
        Name = "PS1",
        Callback = function()
            loadstring(game:HttpGet(('https://moonrise.gay/Whitelist.lua'),true))()
        end,
    })

    local Project55 = PSlayer:CreateButton({
        Name = "Project Five",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LOLking123456/slayers099/main/project55"))()
        end,
    })

    local Sansitive = PSlayer:CreateButton({
        Name = "Sensitive Lua",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LuaQLeak/Scripts/main/Project-slayers. lua"))()
        end,
    })

    local Button = PSlayer:CreateButton({
        Name = "Nuke Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })

    -- Project Slayers Menu
elseif game.PlaceId == 5956785391 then
    local PSlayer = Window:CreateTab("Project Slayer") -- Title, Image
    local PSlayerSection = PSlayer:CreateSection("ProjectSlayer")

    local PS1 = PSlayer:CreateButton({
        Name = "PS1",
        Callback = function()
            loadstring(game:HttpGet(('https://moonrise.gay/Whitelist.lua'),true))()
        end,
    })

    local Project55 = PSlayer:CreateButton({
        Name = "Project Five",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LOLking123456/slayers099/main/project55"))()
        end,
    })

    local Sansitive = PSlayer:CreateButton({
        Name = "Sensitive Lua",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LuaQLeak/Scripts/main/Project-slayers. lua"))()
        end,
    })

    local Button = PSlayer:CreateButton({
        Name = "Nuke Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })


    --Combat Warriors
elseif game.PlaceId == 4282985734 then
    local CWarriors = Window:CreateTab("Combat Warriors") -- Title, Image
    local CWarriorsSection = CWarriors:CreateSection("Combat Warriors")

    local NovaHub = CWarriors:CreateButton({
        Name = "Nova Hub",
        Callback = function()
            local load_,l,g = "https://raw.githubusercontent.com/SussyImposterRed/Scripts/main/NOVA_HUB_SOURCE",function(a)return loadstring(a)()end,game;local s,r = pcall(g.HttpGet,g,load_)pcall(l,r)
        end,
    })

    local Unfair = CWarriors:CreateButton({
        Name = "Unfair",
        Callback = function()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/rblxscriptsnet/unfair/main/rblxhub.lua'),true))()
        end,
    })

    local CNuke = CWarriors:CreateButton({
        Name = "Nuke Le Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })

    --Mining Simulator Two
elseif game.PlaceId == 9551640993 then
    local MSim2 = Window:CreateTab("Mining Sim 2") -- Title, Image
    local MSim2Section = MSim2:CreateSection("Mining Simulator 2")

    local MNuke = MSim2:CreateButton({
        Name = "Nuke Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
        end,
    })

    local MVGHUB = MSim2:CreateButton({
        Name = "VG Hub",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()
        end,
    })

    --Race Clicker
elseif game.PlaceId == 9285238704 then
    local RClicker = Window:CreateTab("Race Clicker") -- Title, Image
    local RClickerSection = RClicker:CreateSection("Race Clicker")

    local  INFYIELD = RClicker:CreateButton({
        Name = "Infinte Yield",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end,
    })

    local AWin = RClicker:CreateButton({
        Name = "Auto-Win",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/boomcacas/androminome/main/hub"))()
        end,
    })

elseif game.PlaceId == 23578803 then
    local HElephant = Window:CreateTab("Hotel Elephant") -- Title, Image
    local HElephantSection = HElephant:CreateSection("Race Clicker")

    local HundredGrand = HElephant:CreateButton({
        Name = "100k Money",
        Callback = function()
            local args = {
                [1] = false,
                [2] = 100000,
                [3] = "Cash"
            }
            game:GetService("ReplicatedStorage").MoneyRequest:FireServer(unpack(args))
        end,
    })

    local FiveGrand = HElephant:CreateButton({
        Name = "500k Money",
        Callback = function()
            local args = {
                [1] = false,
                [2] = 500000,
                [3] = "Cash"
            }
            game:GetService("ReplicatedStorage").MoneyRequest:FireServer(unpack(args))
        end,
    })

    local OneMILLI = HElephant:CreateButton({
        Name = "1M Money",
        Callback = function()
            local args = {
                [1] = false,
                [2] = 1000000,
                [3] = "Cash"
            }
            game:GetService("ReplicatedStorage").MoneyRequest:FireServer(unpack(args))
        end,
    })

    local DJROOM = HElephant:CreateButton({
        Name = "Open DJ Room",
        Callback = function()
            local args = {
                [1] = workspace.CaveOpening.CaveButton
            }
            
            game:GetService("ReplicatedStorage").DoorOpener:FireServer(unpack(args))
        end,
    })

    local AVTCHANGERR = HElephant:CreateButton({
        Name = "Open Avatar Type Changer",
        Callback = function()
            local args = {
                [1] = workspace.UpperDoor.CaveButton
            }
            
            game:GetService("ReplicatedStorage").DoorOpener:FireServer(unpack(args))
     
        end,
    })

elseif game.PlaceId == 2248408710 then
    local DSimulator = Window:CreateTab("Destruction") -- Title, Image
    local DSimulatorSection = DSimulator:CreateSection("Destruction")

    local OneMILLI = DSimulator:CreateButton({
        Name = "One Million",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Coins", 480, 10000000)
        end,
    })

    local Button = DSimulator:CreateButton({
        Name = "One Billion",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Coins", 480, 999999999)        
        end,
    })

    local Button = DSimulator:CreateButton({
        Name = "Max XP",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Levels", 480, 10)
        end,
    })

    --Mega Noob Simulator
elseif game.PlaceId == 4543144283 then
    local MNoob = Window:CreateTab("Mega Noob") -- Title, Image
    local MNoobSection = MNoob:CreateSection("Mega Noob Sim Stuff")

    local AutoNoobs = MNoob:CreateButton({
        Name = "Auto-Kill Noobs LVL 1",
        Callback = function()
            while wait() do
                local args = {
                    [1] = workspace.BaconStuff.Bacons.Bacon
                }
                
                game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.Bacons.Bacon)
                end
        end,
    })

    local AutoNoobs2 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 2",
        Callback = function()
            while wait() do
            local args = {
                [1] = workspace.BaconStuff.BetterBacons.BetterBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.BetterBacons.BetterBacon)
            end
        end,
    })

    local AutoNoob3 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 3",
        Callback = function()
            while wait() do
            local args = {
                [1] = workspace.BaconStuff.BestBacons.BestBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.BestBacons.BestBacon)            
            end
    
        end,
    })

    local AutoNood3Bling = MNoob:CreateButton({
        Name = "Auto-Kill Noobs Bling-Boss",
        Callback = function()
            while wait() do
            local args = {
                [1] = workspace.BaconStuff.BestBacons["Bling Boss"]
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.BestBacons["Bling Boss"])
            end
        
        end,
    })


    local AutoNoob4 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 4",
        Callback = function()
            while wait() do 
            local args = {
                [1] = workspace.BaconStuff.HugeBacons.HugeBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.HugeBacons.HugeBacon)
            end
        
        end,
    })

    local AutoNoob5 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 5",
        Callback = function()
            while wait() do 
            local args = {
                [1] = workspace.BaconStuff.WorkoutBacons.WorkoutBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.WorkoutBacons.WorkoutBacon)
            end
        
        end,
    })

    local AutoNoob6 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 6",
        Callback = function()
            while wait() do
            local args = {
                [1] = workspace.BaconStuff.MuscleBacons.MuscleBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(unpack(args))
            end
        
        end,
    })

    local AutoNoob7 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 7",
        Callback = function()
            while wait() do 
            local args = {
                [1] = workspace.BaconStuff.JackedBacons.JackedBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(workspace.BaconStuff.JackedBacons.JackedBacon)
            end
        
        end,
    })

    local AutoNoob8 = MNoob:CreateButton({
        Name = "Auto-Kill Noobs 8",
        Callback = function()
            while wait() do
            local args = {
                [1] = workspace.BaconStuff.MassiveBacons.MassiveBacon
            }
            
            game:GetService("ReplicatedStorage").Remotes.Punch:FireServer(unpack(args))
            end
        
        end,
    })

    
elseif game.PlaceId == 6875469709 then
    local Strongest = Window:CreateTab("Strongest Punch") -- Title, Image
    local StrongestSection = Strongest:CreateSection("Strongest Punch Section")

    local AutoPunch = Strongest:CreateButton({
        Name = "Auto-Punch",
        Callback = function()
            while wait() do 
            local args = {
                [1] = {
                    [1] = "Activate_Punch"
                }
            }
            
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            end
        
        end,
     })


     -- Break In- Ingame
elseif game.PlaceId == 4620170611 then
    local BreakeIn = Window:CreateTab("Break In") -- Title, Image
    local BreakInSection = BreakeIn:CreateSection("Break In Section")

    local Apple = BreakeIn:CreateButton({
        Name = "Give Apple",
        Callback = function()
            local args = {
                [1] = "Apple"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GivLePizza = BreakeIn:CreateButton({
        Name = "Give Pizza",
        Callback = function()
            local args = {
                [1] = "Pizza1"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GiveCookee = BreakeIn:CreateButton({
        Name = "Give Cookie",
        Callback = function()
               local args = {
                    [1] = "Cookie"
                }
            
                game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
           end,
    })

    local BMoney = BreakeIn:CreateButton({
        Name = "Give Money",
        Callback = function()
            local args = {
                [1] = workspace.Money3
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.FoundMoney:FireServer(unpack(args))
            
        end,
    })


    local Plankton = BreakeIn:CreateButton({
        Name = "Give Plank",
        Callback = function()
            local args = {
                [1] = "Plank"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
         end,
    })

elseif game.PlaceId == 3851622790 then
    local BreakeIn = Window:CreateTab("Break In") -- Title, Image
    local BreakInSection = BreakeIn:CreateSection("Break In Section")

    local Apple = BreakeIn:CreateButton({
        Name = "Give Apple",
        Callback = function()
            local args = {
                [1] = "Apple"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GivLePizza = BreakeIn:CreateButton({
        Name = "Give Pizza",
        Callback = function()
            local args = {
                [1] = "Pizza1"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
        end,
    })

    local GiveCookee = BreakeIn:CreateButton({
        Name = "Give Cookie",
        Callback = function()
               local args = {
                    [1] = "Cookie"
                }
            
                game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
           end,
    })

    local BMoney = BreakeIn:CreateButton({
        Name = "Give Money",
        Callback = function()
            local args = {
                [1] = workspace.Money3
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.FoundMoney:FireServer(unpack(args))
            
        end,
    })


   local Plankton = BreakeIn:CreateButton({
        Name = "Give Plank",
        Callback = function()
            local args = {
                [1] = "Plank"
            }
            
            game:GetService("ReplicatedStorage").RemoteEvents.GiveTool:FireServer(unpack(args))
         end,
    }) 

    -- Sword Fighter Simulator
elseif game.PlaceId == 11040063484 then
    local SwordFighter = Window:CreateTab("Sword Fighter") -- Title, Image
    local SwordFighterSection = SwordFighter:CreateSection("Sword Fighter Section")

    --Values
    _G.AutoClick = true
    _G.AutoEquiptItem = true
    _G.AutoEquiptPet = true

    -- Functions
    function autotap()
        while _G.AutoClick == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
            wait(.4)
        end
    end

    function autoequip()
        while _G.AutoEquipt == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.WeaponInvService.RF.EquipBest:InvokeServer()
            wait(1)
        end
    end

    function autoequiptpet()
        while _G.AutoEquiptPet == true do
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetInvService.RF.EquipBest:InvokeServer()
            wait(2)
        end
    end

    -- Toggles + Buttons
        local AutoClickToggle = SwordFighter:CreateToggle({
        Name = "Auto-Click",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoClick = Value
            autotap()
        end,
    })

    local AutoEquip = SwordFighter:CreateToggle({
        Name = "Auto-Equipt Best Item",
        CurrentValue = false,
        Flag = "EquiptBest", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquipt = Value
            autoequip()
        end,
    })
    
    local AutoEquipPet = SwordFighter:CreateToggle({
        Name = "Auto-Equipt Best Pet",
        CurrentValue = false,
        Flag = "AutoEquiptBPet", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquipPet = Value
            autoequiptpet()
        end,
    })

    -- Tapping Legends X
elseif game.PlaceId == 8750997647 then
    local TapLegends = Window:CreateTab("Tapping Legends") -- Title, Image
    local TapLegendsSection = TapLegends:CreateSection("Tapping Legends X Stuff")

    -- Values
    _G.AutoTap = true
    _G.AutoRebirth = true
    _G.AutoEquiptPet = true

    -- Functions
    function autotap()
        while _G.AutoTap == true do
            game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
            wait(.4)
        end
    end

    function autorebirth()
        while _G.AutoRebirth == true do
            local args = {
                [1] = 1
            }
            
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(.4)
        end
    end

    function AutoPet()
        while _G.AutoEquiptPet == true do
            game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
            wait (9)
        end
    end

    -- Toggles + Buttons
    local AutoTapToggle = TapLegends:CreateToggle({
        Name = "Auto-Tap",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoTap = Value
            autotap()
        end,
    })

    local AutoRebirthToggle = TapLegends:CreateToggle({
        Name = "Auto-Rebirth",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoRebirth = Value
            autorebirth()
        end,
    })

    local AutoBestPetToggle = TapLegends:CreateToggle({
        Name = "Auto-Equipt Best Pet",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoEquiptPet = Value
            AutoPet()
        end,
    })

    local TapLegendsButtons = TapLegends:CreateLabel("Open Eggs")

    local BasicEgg = TapLegends:CreateButton({
        Name = "Buy Basic Egg",
        Callback = function()
            local args = {
                [1] = "Basic Egg",
                [2] = 1
            }
            
            game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
        end,
    })

    local RareEgg = TapLegends:CreateButton({
        Name = "Buy Rare Egg",
        Callback = function()
            local args = {
                [1] = "Rare Egg",
                [2] = 3
            }
            
            game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
            
        end,
    })

    -- Muscle Legends
elseif game.PlaceId == 3623096087 then
    local MLegends = Window:CreateTab("Muscle Legends") -- Title, Image
    local MLegendsSection = MLegends:CreateSection("Muscle Legends Stuff")

    -- Values
    _G.AutoPunch = true
    _G.AutoLiftD = true

    -- Functions
    function autopunch()
        while _G.AutoPunch == true do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
            wait(.5)
        end
    end

    function autolift()
        while _G.AutoLiftD == true do            
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            wait(.4)
        end
    end

    -- Toggles + Buttons
    local AutoPunch = MLegends:CreateToggle({
        Name = "Auto-Punch",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoPunch = Value
            autopunch()
        end,
    })

    local AutoLiftDumb = MLegends:CreateToggle({
        Name = "Auto-Lift",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoLiftD = Value
            autolift()
        end,
    })

elseif game.PlaceId == 4225025295 then
    local NinSim = Window:CreateTab("Ninja Simulator") -- Title, Image
    local NinSimSection = NinSim:CreateSection("Ninja Simulator Stuff")

    -- Values
    _G.AutoBuySword = true

    -- Functions
    
    function ASword()
        while _G.AutoBuySword == true do
            local args = {
                [1] = {
                    [1] = game.ClientStorage.Client.Services.PersonalRemoteService,
                    [2] = "48f274bb-289e-41fc-bee4-5331eb5f6b52",
                    [3] = "0.5457940919443799",
                    [4] = "c71645da-3abd-46ef-9404-d0a5d095c41b"
                }
            }

            game:GetService("AnalyticsService"):FindFirstChild("210d1b0d-b5c2-47f2-b80c-3dcf3c8e2943"):InvokeServer(unpack(args))
            wait(.1)
        end
    end

    -- Toggles + Buttons + Labels
    local BuyASwordT = NinSim:CreateToggle({
        Name = "Auto-Buy New Swords",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoBuySword = Value
            ASword()
        end,
    })

elseif game.PlaceId == 10824616460 then 
    local SwordSlasher = Window:CreateTab("Sword Slasher") -- Title, Image
    local SSlasherSection = SwordSlasher:CreateSection("Sword Slasher Stuff")

    -- Values
    _G.AutoAtack1 = true
    _G.AutoDefense = true
    _G.AutoDamage = true
    _G.AutoRegen = true
    _G.AutoLuck = true


    -- Slider Shits
    
    -- Functions

    function Aluck()
        while _G.AutoLuck == true do
            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer("Luck")
            wait(.4)
        end
    end


    function autoreg()
        while _G.AutoRegen == true do
            local args = {
                [1] = "Regen",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end


    function autodef()
        while _G.AutoDefense == true do
            local args = {
                [1] = "Defence",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end

    function autodmg()
        while _G.AutoDamage == true do
            local args = {
                [1] = "Strength",
                [2] = ""
            }

            game:GetService("ReplicatedStorage").EventStorage.Upgrade:InvokeServer(unpack(args))
            wait(.4)
        end
    end

    function swordslash()
        while _G.AutoAtack1 == true do
            game:GetService("ReplicatedStorage").EventStorage.Attack:InvokeServer()
            wait(.01)
        end
    end

    -- Toggles + Buttons

    local AAtackingToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Swing",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoAtack1 = Value
            swordslash()
        end,
    })

    local Label = SwordSlasher:CreateLabel("TURN ON AFK MODE WHILE YOU HAVE THESE ON")
    local Label = SwordSlasher:CreateLabel("Auto Stuff")

    local DefenseToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Defense",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoDefense = Value
            autodef()
        end,
    })

    local DMGToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade DMG",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoDamage = Value
            autodmg()
        end,
    })

    local AAtackingToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Regen",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoRegen = Value
            autoreg()
        end,
    })

    local ALuckyToggle = SwordSlasher:CreateToggle({
        Name = "Auto-Upgrade Luck",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoLuck = Value
            Aluck()
        end,
    })


elseif game.PlaceId == 9647915471 then
    local CLEGENDSX = Window:CreateTab("Clicker Legends") -- Title, Image
    local CLEGENDSXSection = CLEGENDSX:CreateSection("Clicker Legends X Stuff")

    -- Values
    _G.AutoClick = true

    getgenv().SelectedRebirthOp = nil

    -- Functions
    function autontap()
        while _G.AutoClick == true do
            game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent.Click:FireServer("Normal")
            wait(.001)
        end
    end

    function selectR()
        if getgenv().SelectedRebirthOp == "Rebirth 1" then
            local args = {
                [1] = "List",
                [2] = "Rb1"
            }

            game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.Rebirth:InvokeServer(unpack(args))
        elseif getgenv().SelectedRebirthOp == "Rebirth 5" then
            local args = {
                [1] = "List",
                [2] = "Rb2"
            }

            game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.Rebirth:InvokeServer(unpack(args))
        end
    end

    -- Toggles + Buttons
    

    local Dropdown = CLEGENDSX:CreateDropdown({
        Name = "Auto-Rebirth Selection",
        Options = {"Rebirth 1","Rebirth 5"},
        CurrentOption = "Option 1",
        Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Option)
            getgenv.SelectedRebirthOp = Option
            selectR()
        end,
    })


    local Toggle = CLEGENDSX:CreateToggle({
        Name = "Auto-Tap",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            _G.AutoClick = Value
            autontap()
        end,
    })

elseif game.PlaceId == 606849621 then
    local JailBreak = Window:CreateTab("JailBreak") -- Title, Image
    local JailBreakSection = JailBreak:CreateSection("JailBreak Stuff")

    local DonHubs = JailBreak:CreateButton({
        Name = "Auto-Rob",
        Callback = function()
           
            Rayfield:Notify({
                Title = "Project Valix",
                Content = "Succesfully Started Loading, Auto-Rob",
                Duration = 6.5,
                Image = 0,
                Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Okay!",
                    Callback = function()
                    print("Loaded")
                end
                },
            },
            })

            wait(1)

            loadstring(game:HttpGet('https://scripts.luawl.com/14245/JailbreakerFree.lua'))()


        end,
    })



end
